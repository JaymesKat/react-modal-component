{"version":3,"sources":["logo.svg","components/Modals/index.js","components/Modals/AlertModal.jsx","components/Modals/ConfirmModal.jsx","components/Modals/DeleteModal.jsx","components/Modals/PromptModal.jsx","ModalRoot.js","redux/constants/actionTypes.js","App.js","redux/actions/modalActions.js","redux/reducers/modalReducer.js","redux/reducers/rootReducer.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","modalTypes","alertModal","_ref","closeModal","title","message","react_default","a","createElement","className","type","aria-label","onClick","aria-hidden","confirmModal","confirmAction","deleteModal","deleteAction","cancelText","deleteText","promptModal","fields","onInputChange","map","field","key","label","htmlFor","concat","id","name","placeholder","onChange","MODAL_TYPES","alert","confirm","delete","prompt","ModalContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modalIsOpen","bind","assertThisInitialized","nextProps","setState","modalProps","open","modalType","SpecifiedModal","lib_default","isOpen","onRequestClose","contentLabel","ariaHideApp","overlayClassName","bodyOpenClassName","assign","React","Component","connect","objectSpread","modal","actionTypes","keyMirror","HIDE_MODAL","SHOW_MODAL","MESSAGE","App","hideModal","event","defineProperty","target","value","showInput","console","log","openAlertModal","showModal","openConfirmModal","openDeleteModal","openPromptModal","src","logo","alt","ModalRoot","dispatch","initialState","combineReducers","arguments","length","undefined","action","Boolean","window","location","hostname","match","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2539c008.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import alertModal from './AlertModal'\nimport confirmModal from './ConfirmModal'\nimport deleteModal from './DeleteModal'\nimport promptModal from './PromptModal'\n\nconst modalTypes = {\n  alertModal,\n  confirmModal,\n  deleteModal,\n  promptModal\n}\n\nexport default modalTypes\n","import React from 'react'\n\nconst AlertModal = ({ closeModal, title, message }) => {\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <h5\n          className=\"modal-title\"\n        >{title}</h5>\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeModal}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        <p>{message}</p>\n      </div>\n      <div className=\"modal-footer\">\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>close</button>\n      </div>\n    </div>\n  )\n}\n\nexport default AlertModal;\n","import React from 'react'\n\nconst ConfirmModal = ({ closeModal, confirmAction, title, message }) => {\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <h5\n          className=\"modal-title\"\n        >{title}</h5>\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeModal}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        <p>{message}</p>\n      </div>\n      <div className=\"modal-footer\">\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>Cancel</button>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={confirmAction}>Continue</button>\n      </div>\n    </div>\n  )\n}\n\nexport default ConfirmModal\n","import React from 'react'\n\nconst DeleteModal = ({ closeModal, deleteAction, title, message, cancelText, deleteText }) => {\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <h5\n          className=\"modal-title\"\n        >{title}</h5>\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeModal}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        <p>{message}</p>\n      </div>\n      <div className=\"modal-footer\">\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>{cancelText || 'Cancel'}</button>\n        <button type=\"button\" className=\"btn btn-danger\" onClick={deleteAction}>{deleteText || 'Continue'}</button>\n      </div>\n    </div>\n  )\n}\n\nexport default DeleteModal\n","import React from 'react'\n\nconst PromptModal = ({ closeModal, confirmAction, title, fields, onInputChange }) => {\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <h5\n          className=\"modal-title\"\n        >{title}</h5>\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={closeModal}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        <form>\n          {\n            fields.map(field => {\n              return (\n                <div className=\"form-group\" key={field.label}>\n                  <label htmlFor=\"address\">{`${field.label}`}</label>\n                  <input\n                    id=\"address\"\n                    name={field.name}\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder={`${field.placeholder}`}\n                    onChange={onInputChange}\n                  />\n                </div>\n              )\n            })\n          }\n        </form>\n      </div>\n      <div className=\"modal-footer\">\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={closeModal}>Cancel</button>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={confirmAction}>Continue</button>\n      </div>\n    </div>\n  )\n}\n\nexport default PromptModal\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ReactModal from 'react-modal';\n\nimport { default as modalTypes } from './components/Modals';\n\nconst MODAL_TYPES = {\n  'alert': modalTypes.alertModal,\n  'confirm': modalTypes.confirmModal,\n  'delete': modalTypes.deleteModal,\n  'prompt': modalTypes.promptModal\n}\n\nconst mapStateToProps = state => ({\n  ...state.modal\n})\n\nclass ModalContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false\n    };\n    this.closeModal = this.closeModal.bind(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.setState({\n        modalIsOpen: nextProps.modalProps.open\n      })\n    }\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false })\n  }\n\n  render() {\n    if (!this.props.modalType) {\n      return null\n    }\n    const SpecifiedModal = MODAL_TYPES[this.props.modalType]\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          contentLabel=\"Example Modal\"\n          ariaHideApp={false}\n          overlayClassName=\"modal fade show\"\n          bodyOpenClassName=\"modal-open\"\n          className=\"modal-dialog modal-dialog-centered\"\n        >\n          <SpecifiedModal\n            closeModal={this.closeModal}\n            {...this.props.modalProps}\n          />\n        </ReactModal>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, null)(ModalContainer)\n","import keyMirror from 'keymirror';\n\nconst actionTypes = keyMirror({\n  HIDE_MODAL: null,\n  SHOW_MODAL: null,\n});\n\nexport default actionTypes;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ModalRoot from './ModalRoot';\nimport logo from './logo.svg';\n\nimport './dist/css/template.css';\nimport './App.css';\n\nimport { showModal, hideModal } from './redux/actions/modalActions'\n\nconst MESSAGE = \"A redux modal component.\";\n\nconst mapDispatchToProps = dispatch => ({\n  hideModal: () => dispatch(hideModal()),\n  showModal: (modalProps, modalType) => {\n    dispatch(showModal({ modalProps, modalType }))\n  }\n})\n\nclass App extends Component {\n\n  closeModal = () => { \n    this.props.hideModal();\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  showInput = () =>  {\n    console.log(this.state);\n  }\n\n  openAlertModal = () =>  {\n    this.props.showModal({\n      open: true,\n      title: 'Alert Modal',\n      message: MESSAGE,\n      closeModal: this.closeModal\n    }, 'alert')\n  }\n\n  openConfirmModal = () =>  {\n    this.props.showModal({\n      open: true,\n      title: 'Confirm Modal',\n      message: MESSAGE,\n      confirmAction: this.closeModal,\n      closeModal: this.closeModal\n    }, 'confirm')\n  }\n\n  openDeleteModal = () =>  {\n    this.props.showModal({\n      open: true,\n      title: 'Delete Modal',\n      message: MESSAGE,\n      deleteAction: this.closeModal,\n      closeModal: this.closeModal,\n      deleteText: 'delete'\n    }, 'delete')\n  }\n\n  openPromptModal = () =>  {\n    this.props.showModal({\n      open: true,\n      title: 'Prompt Modal',\n      fields: [{\n        label: 'Address name',\n        name: 'addressName',\n        placeholder: 'Enter address name',\n      }],\n      onInputChange: this.onInputChange,\n      confirmAction: this.showInput\n    }, 'prompt')\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          <header className=\"app-header\">\n            <img src={logo} className=\"app-logo\" alt=\"logo\" />\n            <h1 className=\"app-title\">A Redux Modal Component</h1>\n          </header>\n          <div className=\"modal-types row d-flex justify-content-center align-items-center\">\n            <div className=\"col\">\n              <button\n                className=\"btn btn-outline-primary btn-block\"\n                onClick={this.openAlertModal}\n              >alert</button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-outline-primary btn-block\"\n                onClick={this.openConfirmModal}\n              >confirm</button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-outline-primary btn-block\"\n                onClick={this.openDeleteModal}\n              >delete</button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-outline-primary btn-block\"\n                onClick={this.openPromptModal}\n              >prompt</button>\n            </div>\n          </div>\n        </div>\n        <ModalRoot />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","import actionTypes from '../constants/actionTypes';\n\nexport const showModal = ({ modalProps, modalType }) => dispatch => {\n  dispatch({\n    type: actionTypes.SHOW_MODAL,\n    modalProps,\n    modalType\n  });\n}\n\nexport const hideModal = () => dispatch => {\n  dispatch({\n    type: actionTypes.HIDE_MODAL\n  });\n}\n","import actionTypes from '../constants/actionTypes';\n\nconst initialState = {\n  modalType: null,\n  modalProps: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SHOW_MODAL:\n      return {\n        modalProps: action.modalProps,\n        modalType: action.modalType,\n        type: action.type\n      }\n    case actionTypes.HIDE_MODAL:\n      return initialState\n    default:\n      return state\n  }\n}\n","/*\n src/reducers/rootReducer.js\n*/\nimport { combineReducers } from 'redux';\nimport modalReducer from './modalReducer';\n\nexport default combineReducers({\n modal: modalReducer\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n     <App />\n    </Provider>,\n    document.getElementById('root')\n   );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers/rootReducer';\n\nexport default function configureStore() {\n return createStore(\n  rootReducer,\n   applyMiddleware(thunk)\n );\n}\n"],"sourceRoot":""}